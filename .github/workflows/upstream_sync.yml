name: Sync Upstream SOFA Data

on:
  schedule:
    # Run every hour during business hours for critical updates
    - cron: '0 17-20 * * 1,2,3,4,5'
    # Run every 4 hours otherwise
    - cron: '30 */4 * * *'
  workflow_dispatch:

jobs:
  sync-upstream:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize empty files if needed
      run: |
        if [ -f "init-empty-files.sh" ]; then
          chmod +x init-empty-files.sh
          ./init-empty-files.sh
        fi

    - name: Create directories
      run: |
        mkdir -p v1 public/v1 cache

    - name: Fetch upstream feeds and cache
      run: |
        # Fetch main feed files
        echo "Fetching upstream feeds..."
        
        # Use curl with error handling
        if curl -sS https://sofafeed.macadmins.io/v1/macos_data_feed.json -o v1/macos_data_feed.json; then
          echo "✓ macOS feed fetched successfully"
        else
          echo "⚠ Failed to fetch macOS feed"
        fi
        
        if curl -sS https://sofafeed.macadmins.io/v1/ios_data_feed.json -o v1/ios_data_feed.json; then
          echo "✓ iOS feed fetched successfully"
        else
          echo "⚠ Failed to fetch iOS feed"
        fi
        
        if curl -sS https://sofafeed.macadmins.io/v1/timestamp.json -o v1/timestamp.json; then
          echo "✓ Timestamp fetched successfully"
        else
          echo "⚠ Failed to fetch timestamp"
        fi
        
        if curl -sS https://sofafeed.macadmins.io/v1/rss_feed.xml -o v1/rss_feed.xml; then
          echo "✓ RSS feed fetched successfully"
        else
          echo "⚠ Failed to fetch RSS feed"
        fi
        
        # Try to fetch cache files (these URLs might not be publicly accessible)
        echo "Attempting to fetch cache files..."
        curl -s https://sofa.macadmins.io/cache/cve_details.json -o cache/cve_details.json || echo "Could not fetch cve_details.json"
        curl -s https://sofa.macadmins.io/cache/essential_links.json -o cache/essential_links.json || echo "Could not fetch essential_links.json"
        curl -s https://sofa.macadmins.io/cache/supported_devices.json -o cache/supported_devices.json || echo "Could not fetch supported_devices.json"
        
        # Copy to public directory
        cp v1/*.json public/v1/ || true
        cp v1/*.xml public/v1/ || true

    - name: Verify data integrity
      run: |
        # Check if essential files exist and are valid JSON
        for file in v1/macos_data_feed.json v1/ios_data_feed.json v1/timestamp.json; do
          if [ -f "$file" ] && [ -s "$file" ]; then
            if jq empty "$file" 2>/dev/null; then
              echo "✓ $file is valid JSON"
            else
              echo "✗ $file is invalid JSON"
              # Create empty valid JSON if invalid
              if [[ "$file" == *"_data_feed.json" ]]; then
                echo "[]" > "$file"
              else
                echo "{}" > "$file"
              fi
            fi
          else
            echo "✗ $file is missing or empty"
            # Create empty valid JSON
            if [[ "$file" == *"_data_feed.json" ]]; then
              echo "[]" > "$file"
            else
              echo "{}" > "$file"
            fi
          fi
        done

    - name: Commit and push if changes detected
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        
        # Add files with error handling
        git add v1/* public/v1/* cache/* || true
        
        # Check if there are any changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Sync upstream SOFA data - $(date +'%Y-%m-%d %H:%M:%S')"
          git push
          echo "Changes committed and pushed"
        fi